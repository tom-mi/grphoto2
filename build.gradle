import javax.naming.ConfigurationException

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.anarres.gradle:gradle-jnaerator-plugin:1.0.1'
        classpath 'com.nativelibs4java:jnaerator:0.12'
    }
}

plugins {
    id 'com.jfrog.bintray' version '1.7.3'
    id 'com.palantir.git-version' version '0.10.0'
}

apply plugin: 'org.anarres.jnaerator'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven-publish'

repositories {
    jcenter()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.12'
    compile 'com.nativelibs4java:jnaerator-runtime:0.12'
    compile 'org.slf4j:slf4j-api:1.7.24'
    compile 'org.slf4j:slf4j-simple:1.7.24'
    compile 'javax.jmdns:jmdns:3.4.1'
    compile 'io.resourcepool:ssdp-client:1.1.0'

    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
    testCompile 'com.github.tomjankes:wiremock-groovy:0.2.0'
    testCompile 'com.github.tomakehurst:wiremock-standalone:2.11.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'de.rfnbrgr'
version gitVersion()

jnaerator {
    libraryName 'gphoto2'
    packageName 'de.rfnbrgr.grphoto2.jna'
    headerFiles '/usr/include/gphoto2/gphoto2.h'
    // For unknown reasons the argument name 'readonly' for gp_widget_get_readonly(...) confuses JNAerator (causing
    // everything from that line and following to be missing), so we replace it by something else.
    args '-v', '-Mreadonly=readonly_', '-runtime', 'JNA'
}

sourceSets {
    manualTest {
        groovy {
            srcDir 'src/manual-test/groovy'
        }
    }
}

dependencies {
    manualTestCompile sourceSets.main.output
    manualTestCompile sourceSets.test.output

    manualTestCompile configurations.compile
    manualTestCompile configurations.testCompile

    manualTestRuntime configurations.runtime
    manualTestRuntime configurations.testRuntime
}

task manualTest(type: Test) {
    description = "Run manual tests (located in src/manual-test)"
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    testClassesDirs = sourceSets.manualTest.output
    classpath = sourceSets.manualTest.runtimeClasspath
}

idea {
    module {
        testSourceDirs += sourceSets.manualTest.groovy.srcDirs
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava, sourceSets.main.allGroovy
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            url "$buildDir/repo"
        }
    }
}

bintray {
    if (!project.hasProperty('bintrayUser') || !project.hasProperty('bintrayApiKey')) {
        throw new ConfigurationException('Please set bintrayUser and bintrayApiKey')
    }
    user = project.property('bintrayUser')
    key = project.property('bintrayApiKey')
    pkg {
        repo = 'de.rfnbrgr'
        name = 'grphoto2'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/tom-mi/grphoto2.git'
        version {
            name = project.version
        }
    }
    publications = ['mavenJava']
}
